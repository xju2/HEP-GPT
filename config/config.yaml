# data
out_dir: 'out-trackml'  # where to save the model checkpoints
log_interval: 200  # in terms of iterations
max_epochs: 100

# wandb logging
wandb_log: False # disabled by default
wandb_project: 'owt'
wandb_run_name: 'gpt2' # 'run' + str(time.time())

train_data: data/trackml/train.bin
val_data: data/trackml/val.bin

# system
compile: False  # not working yet!
always_save_checkpoint: True # if True, always save a checkpoint after each eval

init_from: 'scratch' # 'scratch' or 'resume' or 'gpt2*'
ckpt_path: $outdir / 'best.ckpt' # path to the checkpoint to resume from

num_workers: 1  # number of workers for the data loader



fabric:
  accelerator: auto  # cpu, gpu, tpu, auto
  devices: 1
  strategy: ddp  # dp, ddp, ddp_spawn, xla, deepspeed, fsdp
  precision: "bf16-mixed"  # bf16-true, transformer-engine, 16-true, 64-true


# training
training:
  gradient_accumulation_steps: 1  # used to simulate larger batch sizes
  batch_size: 200 # if gradient_accumulation_steps > 1, this is the micro-batch size
  block_size: 20  # maximum sequence length


  # DDP settings
  backend: 'nccl' # 'nccl', 'gloo', etc.

# validation
validation:
  val_interval: 250  # how often to run validation
  num_batches: 200   # how many batches to run validation on
  val_only: False   # if True, script exits right after the first eval [TODO]


# model architecture
model:
  n_layer: 12
  n_head: 16
  n_embd: 256
  dropout: 0
  bias: False  # do we use bias inside LayerNorm and Linear layers?

# adamw optimizer
optimizer:
  learning_rate: 1e-3 # max learning rate
  max_iters: 600_000 # total number of training iterations
  weight_decay: 1e-1   # [TODO]
  beta1: 0.9
  beta2: 0.95
  grad_clip_val: 1.0 # clip gradients at this value, or disable if == 0.0

  # learning rate decay settings
  decay_lr: True  # whether to decay the learning rate
  warmup_iters: 2000  # how many steps to warm up for
  lr_decay_iters: 600000  # should be ~= max_iters per Chinchilla
  min_lr: 6e-5  # minimum learning rate, should be ~= learning_rate/10 per Chinchilla
